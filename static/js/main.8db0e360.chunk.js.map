{"version":3,"sources":["components/Navbar.js","images/dataFrame.PNG","pages/Introduction.js","images/handlingMissingData.PNG","images/step1.jpeg","images/replaceNum.jpeg","images/outliers.jpeg","pages/DataPrep.js","images/withOutlier.png","images/withoutOutlier.png","images/lenwidWithOutlierOG.png","images/lenwidWithoutOG.png","images/clusterWith.png","images/clusterWithout.png","pages/DataVis.js","images/logreg.png","components/Linearlearner.js","images/xgboost.png","components/XgBoost.js","images/knn.png","components/Knn.js","images/svm.png","components/Svm.js","components/FormInput.js","pages/Predictions.js","App.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","paper","padding","spacing","overflow","flexDirection","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","withRouter","props","history","classes","useTheme","useState","open","setOpen","SidebarData","title","path","icon","onClickItem","push","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","direction","Divider","List","map","item","index","ListItem","button","ListItemIcon","ListItemText","primary","Introduction","class","style","margin","src","dataFrame","alt","DataPrep","step1","hmd","replace","outliers","DataVis","withOutlier","maxHeight","withoutOutlier","lenwidWith","lenwidWithout","clusterWith","clusterWithout","LinearLearner","linimag","XGBoost","XGBimg","KNN","knnimg","SVM","svmimg","FormInput","userOption","length","thickness","data","setData","pred","setPred","handleChange","event","target","name","value","prevValue","url","marginTop","for","onChange","type","aria-describedby","fetch","method","headers","then","response","json","body","Predictions","App","Navbar","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8db0e360.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction MiniDrawer(props) {\n  const { history } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const SidebarData = [\n    {\n      title: 'Introduction',\n      path: '/',\n      icon: <HomeIcon/>,\n      onClickItem : ()=>history.push('/')\n    },\n    {\n      title: 'Data Preparation',\n      path: '/preparation',\n      icon: <StorageIcon />,\n      onClickItem : ()=>history.push('/preparation')\n    },\n    {\n      title: 'Data Visualisation',\n      path: '/visualisation',\n      icon: <DataUsageIcon/>,\n      onClickItem : ()=>history.push('/visualisation')\n    },\n    {\n      title : 'Predictions',\n      path : \"/predictions\",\n      icon : <DoneOutlineIcon/>,\n      onClickItem : ()=>history.push(\"/predictions\")\n  \n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Component Classification\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {SidebarData.map((item, index) => (\n            <ListItem button key={item.title} onClick={item.onClickItem}>\n            \n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n              \n            </ListItem>\n            \n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\n\nexport default withRouter(MiniDrawer)","export default __webpack_public_path__ + \"static/media/dataFrame.761d7184.PNG\";","import React from \"react\";\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport dataFrame from '../images/dataFrame.PNG'\nfunction Introduction() {\n  return (\n    <>\n      <h1 class=\"display-4\">Introduction</h1>\n      <p class=\"lead\">\n        The dataset in this use case consists of data of brake pads for disc\n        brakes of a car. The brake pads either belong to the front or rear axle\n        (vorderachse or hinterachse).The data contains dimensional attributes\n        like length, width and thickness (in millimetres) of brake pads.\n      </p>\n\n      <p class=\"lead\">\n        The entire dataset comprises of 4001 entries and 5 columns, some of\n        which are null (NaN). On removal of NaN values from the target feature\n        (classOfPart) we have a dataset consisting of 1440 entries and 5\n        columns.\n        <br />\n        <br />\n        The columns in the dataset are as follows:\n      </p>\n      <br />\n      <row>\n        <ul class=\"list-group col-lg-4 col-md-6 col-sm-12\">\n          <li class=\"list-group-item\" style={{margin : \"0\"}}>\n            <p class=\"lead\" style={{ margin: \"0\" }}>\n              Part number (unique identification)\n            </p>\n          </li>\n          <li class=\"list-group-item\" style={{margin : \"0\"}}>\n            <p class=\"lead\" style={{ margin: \"0\" }}>\n              Length{\" \"}\n            </p>\n          </li>\n          <li class=\"list-group-item\" style={{margin : \"0\"}}>\n            <p class=\"lead\" style={{ margin: \"0\" }}>\n              Width\n            </p>\n          </li>\n          <li class=\"list-group-item\" style={{margin : \"0\"}}>\n            <p class=\"lead\" style={{ margin: \"0\" }}>\n              Thickness\n            </p>\n          </li>\n          <li class=\"list-group-item\" style={{margin : \"0\"}}>\n            <p class=\"lead\" style={{ margin: \"0\" }}>\n              Class Of Part (target feature)\n            </p>\n          </li>\n        </ul>\n        <div>\n          <img\n            src = {dataFrame}\n            class=\"img-fluid\"\n            alt=\"data.head\"\n          />\n        </div>\n      </row>\n    </>\n  );\n}\n\nexport default Introduction;\n","export default __webpack_public_path__ + \"static/media/handlingMissingData.27021ee6.PNG\";","export default __webpack_public_path__ + \"static/media/step1.9438fe1e.jpeg\";","export default __webpack_public_path__ + \"static/media/replaceNum.50b704da.jpeg\";","export default __webpack_public_path__ + \"static/media/outliers.55928809.jpeg\";","import React from \"react\";\nimport hmd from '../images/handlingMissingData.PNG'\nimport step1 from '../images/step1.jpeg'\nimport replace from '../images/replaceNum.jpeg'\nimport outliers from '../images/outliers.jpeg'\nfunction DataPrep() {\n  return (\n    <>\n      <h1 class=\"display-4\">Data Preprocessing</h1>\n      <h4>The data preprocessing steps performed are as follows:</h4>\n      <p class=\"lead\">\n        <ol>\n          <li>\n            Dropped entries having more than one missing value (threshold = 4\n            non NA values). <br />\n            This results in 1275 samples of brake pads.<br/>\n            <img src = {step1} class='img-fluid' alt = 'threshold remove' />\n          </li>\n          <li>\n            In order to handle missing values in the length and width features\n            we have replaced nan values with column wise mean of length and\n            width with respect to the classOfPart (brake pad class).<br/>\n            <img src = {hmd} class='img-fluid' alt = 'handling missing data' />\n          </li>\n          <li>\n            We also replace the categorical classes in the target feature with 0\n            and 1 as we have only two classes of brake pads.<br/>\n            <img src = {replace} class='img-fluid' alt = 'replace features with num' />\n          </li>\n          <li>Removal of outliers in data<br/>\n          <img src = {outliers} class='img-fluid' alt = 'remove outliers' />\n          </li>\n        </ol>\n      </p>\n    </>\n  );\n}\n\nexport default DataPrep;\n","export default __webpack_public_path__ + \"static/media/withOutlier.e55e09fe.png\";","export default __webpack_public_path__ + \"static/media/withoutOutlier.04376651.png\";","export default __webpack_public_path__ + \"static/media/lenwidWithOutlierOG.69cde2b7.png\";","export default __webpack_public_path__ + \"static/media/lenwidWithoutOG.8907f3c6.png\";","export default __webpack_public_path__ + \"static/media/clusterWith.8d5850ba.png\";","export default __webpack_public_path__ + \"static/media/clusterWithout.4209a63b.png\";","import React from \"react\";\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport withOutlier from \"../images/withOutlier.png\";\nimport withoutOutlier from \"../images/withoutOutlier.png\";\nimport lenwidWith from \"../images/lenwidWithOutlierOG.png\";\nimport lenwidWithout from \"../images/lenwidWithoutOG.png\";\nimport clusterWith from \"../images/clusterWith.png\";\nimport clusterWithout from \"../images/clusterWithout.png\";\n\nfunction DataVis() {\n  return (\n    <>\n      <h1 class=\"display-4\">Data Visualisation</h1>\n      <div class=\"row\">\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={withOutlier}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"Original data\"\n            style={{\n              maxHeight: \"450px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of complete dataset with outliers\n          </figcaption>\n        </figure>\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={withoutOutlier}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"Original data\"\n            style={{\n              maxHeight: \"450px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of complete dataset without outliers\n          </figcaption>\n        </figure>\n      </div>\n      <div class=\"row\">\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={lenwidWith}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"length vs width with outliers\"\n            style={{\n              maxHeight: \"275px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of complete dataset with outliers (width vs length)\n          </figcaption>\n        </figure>\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={lenwidWithout}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"length vs width without outliers\"\n            style={{\n              maxHeight: \"275px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of complete dataset without outliers (width vs length)\n          </figcaption>\n        </figure>\n      </div>\n      <div class=\"row\">\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={clusterWith}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"length vs width cluster with outliers\"\n            style={{\n              maxHeight: \"275px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of clustered data with outliers (width vs length)\n          </figcaption>\n        </figure>\n        <figure class=\"figure col-lg-6\">\n          <img\n            src={clusterWithout}\n            class=\"figure-img img-fluid rounded\"\n            alt=\"length vs width cluster without outliers\"\n            style={{\n              maxHeight: \"275px\",\n            }}\n          />\n          <figcaption class=\"figure-caption\">\n            Image of clustered data without outliers (width vs length)\n          </figcaption>\n        </figure>\n      </div>\n    </>\n  );\n}\n\nexport default DataVis;\n","export default __webpack_public_path__ + \"static/media/logreg.a126b8f8.png\";","import React from \"react\";\nimport linimag from \"../images/logreg.png\";\n\nfunction LinearLearner() {\n  return (\n    <>\n      <h2>Linear Learner</h2>\n      <p class=\"lead\">\n        Logistic Regression(Linear Learner) is a core supervised learning\n        technique used to solve classification problems. Logistic Regression has\n        been built up from Linear Regression. This can be used to solve binary\n        classification problems (0 & 1), as well as multi-class classification\n        problems. In Logistic Regression, the sigmoid function is applied to the\n        output of Linear Regression which makes sure that the output of the\n        algorithm is the probability that the event occurs (always between 0 &\n        1). By setting the appropriate threshold (default=0.5) the algorithm can\n        predict the classes 0 or 1.\n      </p>\n      <p class=\"lead\">\n        Accuracy : 0.7391987431264729 <br />\n        F1 Score: 0.7997587454764777\n        <br />\n        ROC-AUC score: 0.7118826626591995\n        <br />\n      </p>\n      <img\n        src={linimag}\n        class=\"img-fluid\"\n        alt=\"linear learner\"\n        style={{ maxHeight: \"600px\" }}\n      />\n    </>\n  );\n}\n\nexport default LinearLearner;\n","export default __webpack_public_path__ + \"static/media/xgboost.5f0a2116.png\";","import React from \"react\";\nimport XGBimg from \"../images/xgboost.png\";\n\nfunction XGBoost() {\n  return (\n    <>\n      <h2>XG Boost</h2>\n      <p class=\"lead\">\n        XGBoost is the latest sensation among ML algorithms. XGBoost stands for\n        Extreme Gradient Boosting. As the name suggests, boosting means\n        improving or making better than before. XGBoost is an ensemble learning\n        technique, which means it makes use of many base learners/weak learners\n        and improves their performance via boosting and uses them collectively\n        to get the best possible prediction/output. This algorithm is a\n        sequential ensemble boosting technique.{\" \"}\n      </p>\n      <p class=\"lead\">\n        Accuracy: 0.7360565593087196\n        <br />\n        F1 Score: 0.7980769230769231\n        <br />\n        ROC-AUC score: 0.7069215300451922\n        <br />\n      </p>\n      <img\n        src={XGBimg}\n        class=\"img-fluid\"\n        alt=\"XG Boost\"\n        style={{ maxHeight: \"600px\" }}\n      />\n    </>\n  );\n}\n\nexport default XGBoost;\n","export default __webpack_public_path__ + \"static/media/knn.ed65ec59.png\";","import React from \"react\";\nimport knnimg from \"../images/knn.png\";\nfunction KNN() {\n  return (\n    <>\n      <h2>K - nearest neighbours</h2>\n      <p class=\"lead\">\n        K Nearest Neighbors (popularly KNN) is another supervised learning\n        technique used for classification use cases. KNN assumes that similar\n        things are closer to each other and classifies them accordingly.\n      </p>\n      <p class=\"lead\">\n        Accuracy: 0.7062058130400628\n        <br />\n        F1 Score: 0.7574578469520105\n        <br />\n        ROC-AUC score: 0.7051484420611067\n        <br />\n      </p>\n      <img\n        src={knnimg}\n        class=\"img-fluid\"\n        alt=\"knn\"\n        style={{ maxHeight: \"600px\" }}\n      />\n    </>\n  );\n}\n\nexport default KNN;\n","export default __webpack_public_path__ + \"static/media/svm.9fa8ff1c.png\";","import React from \"react\";\nimport svmimg from \"../images/svm.png\";\n\nfunction SVM() {\n  return (\n    <>\n      <h2>SVM</h2>\n      <p class=\"lead\">\n        SVM is a supervised machine learning algorithm which is capable of\n        performing both regression and classification tasks. Mostly it is used\n        for classification tasks. SVM model works by plotting our data points in\n        an n dimensional space (n is number of features).The classification task\n        is performed by finding the appropriate hyper-plane for our data (the\n        one which separates our data really well).\n      </p>\n      <p class=\"lead\">\n        Accuracy: 0.7407698350353495\n        <br />\n        F1 Score: 0.7995139732685298\n        <br />\n        ROC-AUC score: 0.7166437822993925\n        <br />\n      </p>\n      <img\n        src={svmimg}\n        class=\"img-fluid\"\n        alt=\"svm\"\n        style={{ maxHeight: \"600px\" }}\n      />\n    </>\n  );\n}\n\nexport default SVM;\n","import React, { useState } from \"react\";\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport LinearLearner from \"./Linearlearner\";\nimport XGBoost from \"./XgBoost\";\nimport KNN from './Knn';\nimport SVM from './Svm';\nfunction FormInput() {\n  const [data, setData] = useState({\n    userOption: \"\",\n    length: 0.0,\n    width: 0.0,\n    thickness: 0.0,\n  });\n\n  const [pred, setPred] = useState(\"\");\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setData((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  const url =\n    \"https://uqj1svfj14.execute-api.us-east-2.amazonaws.com/live/pget?userOption=\" +\n    data.userOption +\n    \"&length=\" +\n    data.length +\n    \"&width=\" +\n    data.width +\n    \"&thickness=\" +\n    data.thickness;\n\n    function renderDesc(){\n      if(data.userOption === \"XGBoost\") return <XGBoost />;\n      else if(data.userOption === \"KNN\") return <KNN />;\n      else if(data.userOption === \"SVM\") return <SVM />;\n      else if(data.userOption === \"LinearLearner\") return <LinearLearner />;\n      else return null;\n    }\n  return (\n    <>\n      <h1 class=\"display-4\">Prediction and algorithm analysis</h1>\n      <div class=\"row\" style = {{marginTop: \"20px\"}}>\n        <div class=\"form-group col-lg-3 col-sm-12\">\n          {/*  drop down box  */}\n          <label for=\"UserOption\" className=\"form-label\">\n            Select an algorithm\n          </label>\n          <select\n            name=\"userOption\"\n            className=\"form-select form-control\"\n            aria-label=\"Default select example\"\n            onChange={handleChange}\n          >\n            <option>Choose an option</option>\n            <option value=\"XGBoost\">XG Boost</option>\n            <option value=\"KNN\">KNN</option>\n            <option value=\"LinearLearner\">Linear Learner</option>\n            <option value=\"SVM\">SVM</option>\n          </select>\n\n          <div>\n            <label for=\"length\" className=\"form-label\">\n              Length\n            </label>\n            <input\n              type=\"text\"\n              name=\"length\"\n              onChange={handleChange}\n              className=\"form-control\"\n              aria-describedby=\"emailHelp\"\n              value={data.length}\n            />\n          </div>\n\n          <div>\n            <label for=\"width\" className=\"form-label\">\n              Width\n            </label>\n            <input\n              name=\"width\"\n              onChange={handleChange}\n              type=\"text\"\n              className=\"form-control\"\n              aria-describedby=\"emailHelp\"\n              value={data.width}\n            />\n          </div>\n\n          <div>\n            <label for=\"thickenss\" className=\"form-label\">\n              Thickness\n            </label>\n            <input\n              name=\"thickness\"\n              onChange={handleChange}\n              type=\"text\"\n              className=\"form-control\"\n              aria-describedby=\"emailHelp\"\n              value={data.thickness}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary \"\n            style={{\n              marginTop: \"30px\",\n            }}\n            onClick={() => {\n              fetch(url, {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n              })\n                .then((response) => response.json())\n                .then((data) => setPred(data.body));\n            }}\n          >\n            Predict\n          </button>\n          <h5 style = {{padding :\"30px\"}}>{pred}</h5>\n        </div>\n        <div class=\"col-lg-9 col-sm-12\" >\n          {\n            renderDesc()\n          }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default FormInput;\n","import React from \"react\";\nimport FormInput from \"../components/FormInput\";\nfunction Predictions() {\n  return (\n    \n        <FormInput />\n      \n  );\n}\n\nexport default Predictions;\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Introduction from './pages/Introduction';\nimport DataPrep from './pages/DataPrep';\nimport DataVis from './pages/DataVis';\nimport Predictions from './pages/Predictions';\nfunction App() {\n\n  return (\n    <>\n      <Router>\n       <div> \n        <Navbar />\n      </div>\n        <Switch>\n        <div className = 'container' style={{marginTop : '120px'}}>\n          <Route path='/' exact component={Introduction} />\n          <Route path='/preparation' component={DataPrep} />\n          <Route path='/visualisation' component={DataVis} />\n          <Route path= '/predictions' component={Predictions} />\n        </div>\n        </Switch>\n        \n      </Router>\n      \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}